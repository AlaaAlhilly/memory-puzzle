{"version":3,"sources":["components/container/index.js","components/Timer/index.js","components/navbar/index.js","components/StartGame/index.js","components/mainContainer/LeftPanel/index.js","components/mainContainer/RightPannel/index.js","components/API/index.js","components/mainContainer/index.js","components/Facebook.js","App.js","index.js"],"names":["Container","props","name","className","disabled","react_default","a","createElement","role","style","backgroundImage","src","onClick","handleClickEvent","index","Timer","fontSize","this","value","seconds","React","Component","Navbar","href","Timer_Timer","StartButton","marginLeft","startTheGame","LeftPannel","picture","alt","borderRadius","score","highest_score","RightPannel","persons","high_scores","forEach","person","push","key","uniqid","high_score","API","getScores","axios","get","saveScore","post","highestScore","id","require","MainContainer","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","re_sort_images","t_images","len","length","tempArr","i","splice","Math","floor","random","indexes_guessed","includes","sec_bonus","moment","items","get_saved_images_that_clicked","keys","state","update_with_first_guess","update_the_state_correct_guess","update_the_state_incorrect_guess","expose_image","temp_images","get_copy_of_saved_images","src2","setState","images","Array","from","setTimeout","hide_exposed_images","image_mask","get_fast_guess_bunos","bonus","calc_bonus_sec","parseInt","ms","diff","d","duration","correct_counter","win_the_game","image_ex","images_copy","disable_correct_guessed_images","assign","reset_the_images_states","image","activate_half_time_bonus","bk_this","assertThisInitialized","time_out","console","log","get_this_user_highest_score","userId","then","res","data","catch","err","save_this_score","score_to_save","startCountDown","gameOver","swal","buttons","cancel","confirm","closeOnClickOutside","con","window","location","reload","fill_divs_with_images","container","isClicked","highScores","endpoint","secondsRemaining","intervalHandle","handleChange","bind","timing","_this2","socketIOClient","on","event","target","min","sec","clearInterval","setInterval","time","navbar","marginTop","LeftPanel","mainContainer_RightPannel","paddingLeft","StartGame_StartButton","Facebook","isLoggedIn","userID","email","responseFacebook","response","url","componentClicked","fbContent","mainContainer","facebook_login_with_button_default","appId","autoLoad","fields","callback","App","Facebook_Facebook","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.232d2485.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\nfunction Container(props) {\n    let name = props.name;\n    if (props.className === \"guessed\" && props.disabled === \"true\") {\n            return (\n                <div\n                    role=\"img\"\n                    className=\"click-item\"\n                    name={props.name}\n                    style={{ backgroundImage: \"url(\" + props.src + \")\" }}>\n                </div>\n             )\n    } else {\n        return (\n            <div\n                role=\"img\"\n                className=\"click-item\"\n                name={props.name}\n                onClick={() => props.handleClickEvent(name, props.index)}\n                style={{ backgroundImage: \"url(\" + props.src + \")\" }}>\n            </div>\n        )\n    }\n}\nexport default Container;","import React from 'react';\n\nexport default class Timer extends React.Component {\n    render() {\n      return (\n        <div>\n          <h1 style={{ fontSize: 20}}>{this.props.value}:{this.props.seconds}</h1>\n        </div>\n      );\n    }\n  }","import React from 'react';\nimport './style.css';\nimport Timer from '../Timer';\n\nfunction Navbar(props) {\n    return (\n        <nav className=\"navbar\">\n            <ul>\n                <li className=\"brand\">\n                    <a href=\"/\">Memory Game</a>\n                </li>\n                <li >\n                    <Timer value={props.value} seconds={props.seconds}/>\n                </li>\n                \n            </ul>\n        </nav>\n    )\n};\n\nexport default Navbar;","import React from 'react';\nexport default class StartButton extends React.Component {\n    render() {\n      return (\n        <div style={{ marginLeft: 130 }}>\n          <button className=\"btn btn-lg btn-success\"  onClick={this.props.startTheGame}>Start</button>\n        </div>\n  \n      );\n    }\n  }","import React from 'react';\nimport './style.css'\nfunction LeftPannel(props) {\n    return (\n        <div className=\"col-sm-2 col-md-2 col-lg-2 left_p\">\n            <img src={props.picture} alt={props.name} style={{ borderRadius: \"50%\" }} />\n            <ul className=\"list-unstyled components\">\n                <p>{props.name}</p>\n                <li className=\"left\">Score: {props.score}</li>\n                <li className=\"left\">Highest Score: {props.highest_score}</li>\n            </ul>\n         </div>\n    )\n}\nexport default LeftPannel;","import React from 'react';\nimport './style.css'\nimport uniqid from 'uniqid';\nfunction RightPannel(props) {\n    let persons = [];\n    props.high_scores.forEach(person => {\n        persons.push(\n            <li key={uniqid()} className=\"list-group-item d-flex justify-content-between align-items-center\">\n                <img src={person.picture} style={{borderRadius:\"50%\"}}/>\n                {person.name}\n                <span className=\"badge badge-primary badge-pill\">{person.high_score}</span>\n            </li>\n        )\n    })\n    \n    return (\n        <div className=\"col-sm-2 col-md-2 col-lg-3 right_p\">\n            <ul className=\"list-group\">\n            <li className=\"list-group-item d-flex justify-content-between align-items-center\">High Scores:</li>\n                {persons}\n            </ul>\n        </div>\n    )\n}\nexport default RightPannel;","import axios from 'axios';\n\nconst API = {\n    getScores: function () {\n        return axios.get('/api/high_scores');\n    },\n    saveScore: function (score) {\n        return axios.post('/api/high_scores', score);\n    },\n    highestScore: function (id) {\n        return axios.get('/api/high_scores/' + id);\n    }\n}\n\nexport default API;","import React, { Component } from 'react';\nimport Container from '../container';\nimport NavBar from '../navbar';\nimport './style.css'\nimport images from './images.json'\nimport StartButton from '../StartGame';\nimport LeftPannel from './LeftPanel';\nimport RightPannel from './RightPannel';\nimport swal from 'sweetalert';\nimport moment from 'moment';\nimport API from '../API';\nimport socketIOClient from 'socket.io-client';\nvar uniqid = require('uniqid');\n\nclass MainContainer extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            score: 0,\n            items: {},\n            images: [],\n            seconds: '00',\n            value: '2',\n            isClicked: false,\n            highScores: [],\n            image_mask: \"https://i.imgur.com/ITxiG5s.jpg\",\n            endpoint: `http://localhost:3001/`,\n            high_score :0\n      \n        }\n        this.time_out = null;\n        this.correct_counter = 0;\n        this.indexes_guessed = [];\n        this.sec_bonus = [];\n        this.secondsRemaining = null;\n        this.intervalHandle = null;\n        this.handleChange = this.handleChange.bind(this);\n        this.startCountDown = this.startCountDown.bind(this);\n        this.timing = this.timing.bind(this);\n    }\n    componentDidMount() {\n        const  endpoint  = this.state.endpoint;\n        const socket = socketIOClient(endpoint);\n        socket.on(\"FromAPI\", data => {\n            this.setState({\n                highScores: data,\n            })\n        });\n   \n    }\n    re_sort_images = t_images => {\n        let len = t_images.length;\n        let tempArr = [];\n        for ( let i = 0; i < len-1; i++ ) {\n            tempArr.push(t_images.splice(Math.floor(Math.random()*t_images.length),1)[0]);\n        }\n        tempArr.push(t_images[0]);\n        t_images = tempArr;\n        return t_images;\n    }\n    //click logic and supporting functions\n    handleClickEvent = (name, index) => {\n        //check if the image is already clicked before\n        if (this.indexes_guessed.includes(index) || this.indexes_guessed.length >= 2) {\n            return;\n        }\n        //get the time for the clicks\n        this.sec_bonus.push(moment())\n        //get all imaged that clicked indexes\n        this.indexes_guessed.push(index)\n        //get all the object we have saved\n        let items = this.get_saved_images_that_clicked();\n        if (Object.keys(this.state.items).length === 0) {\n            items[name] = 1;\n            this.update_with_first_guess(index, name, items);\n            return;\n        }\n        //check if it is the correct guess\n        if (this.state.items[name]) {\n            this.update_the_state_correct_guess(index);\n        } else {\n            //reset the seconds bonus\n            this.sec_bonus = [];\n            this.update_the_state_incorrect_guess(index)\n        }\n    }\n    expose_image = (index) => {\n        let temp_images = this.get_copy_of_saved_images();\n        temp_images[index].src = temp_images[index].src2;\n        return temp_images;\n    }\n    update_with_first_guess = (index, name, items) => {\n        items[name] = 1;\n        let temp_images = this.expose_image(index);\n        this.setState({\n            images: Array.from(temp_images),\n            items: items,\n        })\n    }\n    update_the_state_incorrect_guess = (index) => {\n        let temp_images = this.expose_image(index);\n        this.setState({\n            images: Array.from(temp_images)\n        })\n        setTimeout(() => {\n            this.hide_exposed_images();\n        },1000)\n    }\n    hide_exposed_images = () => {\n        let temp_images = this.get_copy_of_saved_images();\n        for (let i = 0; i < this.indexes_guessed.length; i++){\n            temp_images[this.indexes_guessed[i]].src = this.state.image_mask;\n            temp_images[this.indexes_guessed[i]].disabled = \"false\";\n        }\n        this.indexes_guessed = [];\n        this.setState({\n            images: Array.from(temp_images),\n            items: {},\n        })\n    }\n    get_fast_guess_bunos = () => {\n        let bonus = 0;\n        let calc_bonus_sec = parseInt(this.state.value) * 60 + parseInt(this.state.seconds);\n        let ms = moment(this.sec_bonus[1],\"DD/MM/YYYY HH:mm:ss\").diff(moment(this.sec_bonus[0],\"DD/MM/YYYY HH:mm:ss\"));\n        let d = moment.duration(ms);\n        if (d.seconds() <= calc_bonus_sec / (images.length - this.correct_counter)) {\n            bonus = d.seconds() / (calc_bonus_sec/ (images.length - this.correct_counter));\n            bonus = 100 - parseInt(10 * bonus);\n        }\n        if (this.correct_counter == images.length - 2) {\n            this.win_the_game()\n        } else {\n            this.correct_counter += 2;\n        }\n        this.sec_bonus= []\n        return bonus;\n    }\n    update_the_state_correct_guess = (index) => {\n        let bonus = this.get_fast_guess_bunos()\n        let image_ex = this.expose_image(index);\n        this.setState({images:image_ex})\n        let images_copy = this.disable_correct_guessed_images();\n        this.indexes_guessed = [];\n        this.setState({\n            score: this.state.score +10 + bonus,\n            items: {},\n            images: images_copy,\n        });\n    }\n    get_copy_of_saved_images = () => {\n        let temp_images = Array.from(this.state.images);\n        return temp_images;\n    }\n    disable_correct_guessed_images = () => {\n        let temp_images = this.get_copy_of_saved_images()\n        for (let i = 0; i < this.indexes_guessed.length; i++){\n            temp_images[this.indexes_guessed[i]].disabled = \"true\";\n            temp_images[this.indexes_guessed[i]].className = \"guessed\";\n        }\n        return temp_images\n    }\n    get_saved_images_that_clicked = () => {\n        let items = {};\n        const res_items = Object.assign(items, this.state.items);\n        return res_items;\n    }\n    //------------end of click event functions\n    reset_the_images_states = () => {\n        images.forEach(image => {\n            image.src = this.state.image_mask;\n            image.disabled = \"false\";\n            image.className = \"\";\n        })\n    }\n    activate_half_time_bonus = () => {\n        let bk_this = this;\n        this.time_out = setTimeout(() => { \n            if (bk_this.correct_counter >= images.length / 2) {\n                bk_this.setState({ score: bk_this.state.score + (bk_this.correct_counter * 5) }) \n            }\n            console.log(bk_this.state.score+\" \"+bk_this.correct_counter);\n        }, 60000)\n    }\n    get_this_user_highest_score = () => {\n        API.highestScore(this.props.userId)\n            .then(res => {\n                if(res.data)\n                    this.setState({ high_score: res.data.high_score })\n            })\n            .catch(err => console.log(err));\n    }\n    save_this_score = () => {\n        let score_to_save = {\n            userId: this.props.userId,\n            name: this.props.name,\n            picture: this.props.picture,\n            high_score: this.state.score\n        }\n        API.saveScore(score_to_save)\n            .then(res => {\n                this.get_this_user_highest_score();\n            })\n        }\n    startTheGame = () => {\n        this.get_this_user_highest_score()\n        this.reset_the_images_states()\n        this.setState({\n            value: '2',\n            seconds: '00',\n            items: {},\n            images: this.re_sort_images(Array.from(images))\n        })\n        this.activate_half_time_bonus();\n        this.startCountDown()\n    }\n    gameOver = () => {\n        swal(\"times up\", {\n            buttons: {\n                cancel: true,\n                confirm: true,\n            },\n            closeOnClickOutside: false\n        }).then(con=>{\n            if (con) {\n                this.save_this_score();\n                this.indexes_guessed = [];\n                this.correct_counter = 0;\n                this.sec_bonus = [];\n                if (con) this.startTheGame()\n            } else {\n            window.location.reload();\n        }\n    })\n    }\n    win_the_game = () => {\n        swal(\"Congrats you won the game\", {\n            buttons: {\n                cancel: true,\n                confirm: true,\n            },\n            closeOnClickOutside: false\n        }).then(con=>{\n            if (con) {\n                this.save_this_score();\n                this.indexes_guessed = [];\n                this.correct_counter = 0;\n                this.sec_bonus = [];\n                if (con) this.startTheGame()\n            } else {\n                window.location.reload();\n            }\n        })\n    }\n      //timer process\n      handleChange(event) {\n        this.setState({\n          value: event.target.value\n        })\n      }\n    \n    timing() {\n        var min = Math.floor(this.secondsRemaining / 60);\n        var sec = this.secondsRemaining - (min * 60);\n    \n        this.setState({\n          value: min,\n          seconds: sec,\n        })\n        if (sec < 10) {\n          this.setState({\n            seconds: \"0\" + this.state.seconds,\n          })\n    \n        }\n        if (min < 10) {\n          this.setState({\n            value: \"0\" + min,\n          })\n    \n        }\n        if (min === 0 && sec === 0) {\n            clearInterval(this.intervalHandle);\n            console.log(min + \" \" + sec);\n            this.gameOver()\n        }\n        this.secondsRemaining--\n    }\n    startCountDown() {\n        this.intervalHandle = setInterval(this.timing, 1000);\n        let time = this.state.value;\n        this.secondsRemaining = time * 60;\n        this.setState({\n          isClicked : true\n        })\n      }\n    //end of timer\n    fill_divs_with_images = () => {\n        let images = [];\n        this.state.images.forEach((image, index) => {\n                images.push(\n                    <Container\n                        className={image.className}\n                        disabled = {image.disabled}\n                        index={index}\n                        src={image.src}\n                        name={image.name}\n                        key={uniqid()}\n                        handleClickEvent={this.handleClickEvent}\n                     />\n                )\n        })\n        return images;\n    }\n    render() {\n        const isClicked = this.state.isClicked\n        if (!isClicked) {\n            return (\n                <div className=\"container\" style={{paddingLeft:\"0\"}}>\n                    <StartButton startTheGame={this.startTheGame}/>\n                </div>\n            )\n        } else {\n            let images = this.fill_divs_with_images();\n            return (\n                <div>\n                    <NavBar\n                        value={this.state.value}\n                        seconds={this.state.seconds}\n                    />\n                    <main className=\"container-fluid\" style={{marginTop:\"20px\"}}>\n                        <div className=\"row\">\n                            <LeftPannel\n                                picture={this.props.picture}\n                                name={this.props.name}\n                                score={this.state.score}\n                                highest_score={this.state.high_score}\n                            />\n                            <div className=\"col-sm-8 col-md-8 col-lg-7\">\n                                {\n                                    images\n                                }\n                            </div>\n                            <RightPannel high_scores={this.state.highScores}/>\n                       </div>\n                    </main>\n                </div>\n            )\n        }\n        \n    }\n}\nexport default MainContainer;","import React, { Component } from \"react\";\nimport FacebookLogin from \"react-facebook-login\";\nimport MainContainer from './mainContainer';\nimport './fb_style.css'\nexport default class Facebook extends Component {\n  state = {\n    isLoggedIn: false,\n    userID: \"\",\n    name: \"\",\n    email: \"\",\n    picture: \"\"\n  };\n\n  responseFacebook = response => {\n    console.log(response);\n\n    this.setState({\n      isLoggedIn: true,\n      userID: response.userID,\n      name: response.name,\n      email: response.email,\n      picture: response.picture.data.url\n    });\n  };\n\n  componentClicked = () => console.log(\"clicked\");\n\n  render() {\n    let fbContent;\n\n    if (this.state.isLoggedIn) {\n      fbContent = (\n        <MainContainer name={this.state.name} picture={this.state.picture} userId={this.state.userID}/>\n      );\n    } else {\n      fbContent = (\n        <div className=\"container\">\n        <div className=\"row\">\n            <div className=\"col-sm-9 col-md-7 col-lg-12 mx-auto\">\n              <h1>Memory Puzzle Game</h1>\n            <div className=\"card card-signin my-5\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title text-center\">Play and make friends</h5>\n                <form className=\"form-signin text-center\">\n                  <FacebookLogin\n                    appId=\"431641760905167\"\n                    autoLoad={true}\n                    fields=\"name,email,picture\"\n                    onClick={this.componentClicked}\n                    callback={this.responseFacebook}\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      );\n    }\n    return <div>{fbContent}</div>;\n  }\n}","import React from 'react';\nimport Facebook from  './components/Facebook';\nfunction App() {\n  return (\n    <Facebook />\n  )\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}